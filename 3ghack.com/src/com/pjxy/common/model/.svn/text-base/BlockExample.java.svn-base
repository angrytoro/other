package com.pjxy.common.model;

import java.util.ArrayList;
import java.util.List;

public class BlockExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table block
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table block
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table block
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table block
	 * @mbggenerated
	 */
	protected int limitStart = -1;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table block
	 * @mbggenerated
	 */
	protected int limitEnd = -1;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public BlockExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void setLimitStart(int limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public int getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public void setLimitEnd(int limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table block
	 * @mbggenerated
	 */
	public int getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table block
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andParentIsNull() {
			addCriterion("PARENT is null");
			return (Criteria) this;
		}

		public Criteria andParentIsNotNull() {
			addCriterion("PARENT is not null");
			return (Criteria) this;
		}

		public Criteria andParentEqualTo(Integer value) {
			addCriterion("PARENT =", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentNotEqualTo(Integer value) {
			addCriterion("PARENT <>", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentGreaterThan(Integer value) {
			addCriterion("PARENT >", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentGreaterThanOrEqualTo(Integer value) {
			addCriterion("PARENT >=", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentLessThan(Integer value) {
			addCriterion("PARENT <", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentLessThanOrEqualTo(Integer value) {
			addCriterion("PARENT <=", value, "parent");
			return (Criteria) this;
		}

		public Criteria andParentIn(List<Integer> values) {
			addCriterion("PARENT in", values, "parent");
			return (Criteria) this;
		}

		public Criteria andParentNotIn(List<Integer> values) {
			addCriterion("PARENT not in", values, "parent");
			return (Criteria) this;
		}

		public Criteria andParentBetween(Integer value1, Integer value2) {
			addCriterion("PARENT between", value1, value2, "parent");
			return (Criteria) this;
		}

		public Criteria andParentNotBetween(Integer value1, Integer value2) {
			addCriterion("PARENT not between", value1, value2, "parent");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("`NAME` is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("`NAME` is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("`NAME` =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("`NAME` <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("`NAME` >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("`NAME` >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("`NAME` <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("`NAME` <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("`NAME` like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("`NAME` not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("`NAME` in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("`NAME` not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("`NAME` between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("`NAME` not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andBannerIsNull() {
			addCriterion("BANNER is null");
			return (Criteria) this;
		}

		public Criteria andBannerIsNotNull() {
			addCriterion("BANNER is not null");
			return (Criteria) this;
		}

		public Criteria andBannerEqualTo(String value) {
			addCriterion("BANNER =", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerNotEqualTo(String value) {
			addCriterion("BANNER <>", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerGreaterThan(String value) {
			addCriterion("BANNER >", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerGreaterThanOrEqualTo(String value) {
			addCriterion("BANNER >=", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerLessThan(String value) {
			addCriterion("BANNER <", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerLessThanOrEqualTo(String value) {
			addCriterion("BANNER <=", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerLike(String value) {
			addCriterion("BANNER like", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerNotLike(String value) {
			addCriterion("BANNER not like", value, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerIn(List<String> values) {
			addCriterion("BANNER in", values, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerNotIn(List<String> values) {
			addCriterion("BANNER not in", values, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerBetween(String value1, String value2) {
			addCriterion("BANNER between", value1, value2, "banner");
			return (Criteria) this;
		}

		public Criteria andBannerNotBetween(String value1, String value2) {
			addCriterion("BANNER not between", value1, value2, "banner");
			return (Criteria) this;
		}

		public Criteria andPostCountIsNull() {
			addCriterion("POST_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andPostCountIsNotNull() {
			addCriterion("POST_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andPostCountEqualTo(Integer value) {
			addCriterion("POST_COUNT =", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountNotEqualTo(Integer value) {
			addCriterion("POST_COUNT <>", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountGreaterThan(Integer value) {
			addCriterion("POST_COUNT >", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("POST_COUNT >=", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountLessThan(Integer value) {
			addCriterion("POST_COUNT <", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountLessThanOrEqualTo(Integer value) {
			addCriterion("POST_COUNT <=", value, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountIn(List<Integer> values) {
			addCriterion("POST_COUNT in", values, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountNotIn(List<Integer> values) {
			addCriterion("POST_COUNT not in", values, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountBetween(Integer value1, Integer value2) {
			addCriterion("POST_COUNT between", value1, value2, "postCount");
			return (Criteria) this;
		}

		public Criteria andPostCountNotBetween(Integer value1, Integer value2) {
			addCriterion("POST_COUNT not between", value1, value2, "postCount");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table block
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table block
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}