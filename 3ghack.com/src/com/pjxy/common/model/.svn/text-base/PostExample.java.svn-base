package com.pjxy.common.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PostExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table post
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table post
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table post
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table post
	 * @mbggenerated
	 */
	protected int limitStart = -1;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table post
	 * @mbggenerated
	 */
	protected int limitEnd = -1;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public PostExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void setLimitStart(int limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public int getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public void setLimitEnd(int limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table post
	 * @mbggenerated
	 */
	public int getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table post
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andBlockIdIsNull() {
			addCriterion("BLOCK_ID is null");
			return (Criteria) this;
		}

		public Criteria andBlockIdIsNotNull() {
			addCriterion("BLOCK_ID is not null");
			return (Criteria) this;
		}

		public Criteria andBlockIdEqualTo(Integer value) {
			addCriterion("BLOCK_ID =", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdNotEqualTo(Integer value) {
			addCriterion("BLOCK_ID <>", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdGreaterThan(Integer value) {
			addCriterion("BLOCK_ID >", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("BLOCK_ID >=", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdLessThan(Integer value) {
			addCriterion("BLOCK_ID <", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdLessThanOrEqualTo(Integer value) {
			addCriterion("BLOCK_ID <=", value, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdIn(List<Integer> values) {
			addCriterion("BLOCK_ID in", values, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdNotIn(List<Integer> values) {
			addCriterion("BLOCK_ID not in", values, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdBetween(Integer value1, Integer value2) {
			addCriterion("BLOCK_ID between", value1, value2, "blockId");
			return (Criteria) this;
		}

		public Criteria andBlockIdNotBetween(Integer value1, Integer value2) {
			addCriterion("BLOCK_ID not between", value1, value2, "blockId");
			return (Criteria) this;
		}

		public Criteria andTitleIsNull() {
			addCriterion("TITLE is null");
			return (Criteria) this;
		}

		public Criteria andTitleIsNotNull() {
			addCriterion("TITLE is not null");
			return (Criteria) this;
		}

		public Criteria andTitleEqualTo(String value) {
			addCriterion("TITLE =", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotEqualTo(String value) {
			addCriterion("TITLE <>", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleGreaterThan(String value) {
			addCriterion("TITLE >", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleGreaterThanOrEqualTo(String value) {
			addCriterion("TITLE >=", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLessThan(String value) {
			addCriterion("TITLE <", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLessThanOrEqualTo(String value) {
			addCriterion("TITLE <=", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLike(String value) {
			addCriterion("TITLE like", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotLike(String value) {
			addCriterion("TITLE not like", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleIn(List<String> values) {
			addCriterion("TITLE in", values, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotIn(List<String> values) {
			addCriterion("TITLE not in", values, "title");
			return (Criteria) this;
		}

		public Criteria andTitleBetween(String value1, String value2) {
			addCriterion("TITLE between", value1, value2, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotBetween(String value1, String value2) {
			addCriterion("TITLE not between", value1, value2, "title");
			return (Criteria) this;
		}

		public Criteria andViewCountIsNull() {
			addCriterion("VIEW_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andViewCountIsNotNull() {
			addCriterion("VIEW_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andViewCountEqualTo(Integer value) {
			addCriterion("VIEW_COUNT =", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountNotEqualTo(Integer value) {
			addCriterion("VIEW_COUNT <>", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountGreaterThan(Integer value) {
			addCriterion("VIEW_COUNT >", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("VIEW_COUNT >=", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountLessThan(Integer value) {
			addCriterion("VIEW_COUNT <", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountLessThanOrEqualTo(Integer value) {
			addCriterion("VIEW_COUNT <=", value, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountIn(List<Integer> values) {
			addCriterion("VIEW_COUNT in", values, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountNotIn(List<Integer> values) {
			addCriterion("VIEW_COUNT not in", values, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountBetween(Integer value1, Integer value2) {
			addCriterion("VIEW_COUNT between", value1, value2, "viewCount");
			return (Criteria) this;
		}

		public Criteria andViewCountNotBetween(Integer value1, Integer value2) {
			addCriterion("VIEW_COUNT not between", value1, value2, "viewCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountIsNull() {
			addCriterion("GOOD_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andGoodCountIsNotNull() {
			addCriterion("GOOD_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andGoodCountEqualTo(Integer value) {
			addCriterion("GOOD_COUNT =", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountNotEqualTo(Integer value) {
			addCriterion("GOOD_COUNT <>", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountGreaterThan(Integer value) {
			addCriterion("GOOD_COUNT >", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("GOOD_COUNT >=", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountLessThan(Integer value) {
			addCriterion("GOOD_COUNT <", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountLessThanOrEqualTo(Integer value) {
			addCriterion("GOOD_COUNT <=", value, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountIn(List<Integer> values) {
			addCriterion("GOOD_COUNT in", values, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountNotIn(List<Integer> values) {
			addCriterion("GOOD_COUNT not in", values, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountBetween(Integer value1, Integer value2) {
			addCriterion("GOOD_COUNT between", value1, value2, "goodCount");
			return (Criteria) this;
		}

		public Criteria andGoodCountNotBetween(Integer value1, Integer value2) {
			addCriterion("GOOD_COUNT not between", value1, value2, "goodCount");
			return (Criteria) this;
		}

		public Criteria andBadCountIsNull() {
			addCriterion("BAD_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andBadCountIsNotNull() {
			addCriterion("BAD_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andBadCountEqualTo(Integer value) {
			addCriterion("BAD_COUNT =", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountNotEqualTo(Integer value) {
			addCriterion("BAD_COUNT <>", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountGreaterThan(Integer value) {
			addCriterion("BAD_COUNT >", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("BAD_COUNT >=", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountLessThan(Integer value) {
			addCriterion("BAD_COUNT <", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountLessThanOrEqualTo(Integer value) {
			addCriterion("BAD_COUNT <=", value, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountIn(List<Integer> values) {
			addCriterion("BAD_COUNT in", values, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountNotIn(List<Integer> values) {
			addCriterion("BAD_COUNT not in", values, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountBetween(Integer value1, Integer value2) {
			addCriterion("BAD_COUNT between", value1, value2, "badCount");
			return (Criteria) this;
		}

		public Criteria andBadCountNotBetween(Integer value1, Integer value2) {
			addCriterion("BAD_COUNT not between", value1, value2, "badCount");
			return (Criteria) this;
		}

		public Criteria andWellIsNull() {
			addCriterion("WELL is null");
			return (Criteria) this;
		}

		public Criteria andWellIsNotNull() {
			addCriterion("WELL is not null");
			return (Criteria) this;
		}

		public Criteria andWellEqualTo(Boolean value) {
			addCriterion("WELL =", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellNotEqualTo(Boolean value) {
			addCriterion("WELL <>", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellGreaterThan(Boolean value) {
			addCriterion("WELL >", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellGreaterThanOrEqualTo(Boolean value) {
			addCriterion("WELL >=", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellLessThan(Boolean value) {
			addCriterion("WELL <", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellLessThanOrEqualTo(Boolean value) {
			addCriterion("WELL <=", value, "well");
			return (Criteria) this;
		}

		public Criteria andWellIn(List<Boolean> values) {
			addCriterion("WELL in", values, "well");
			return (Criteria) this;
		}

		public Criteria andWellNotIn(List<Boolean> values) {
			addCriterion("WELL not in", values, "well");
			return (Criteria) this;
		}

		public Criteria andWellBetween(Boolean value1, Boolean value2) {
			addCriterion("WELL between", value1, value2, "well");
			return (Criteria) this;
		}

		public Criteria andWellNotBetween(Boolean value1, Boolean value2) {
			addCriterion("WELL not between", value1, value2, "well");
			return (Criteria) this;
		}

		public Criteria andBestIsNull() {
			addCriterion("BEST is null");
			return (Criteria) this;
		}

		public Criteria andBestIsNotNull() {
			addCriterion("BEST is not null");
			return (Criteria) this;
		}

		public Criteria andBestEqualTo(Boolean value) {
			addCriterion("BEST =", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestNotEqualTo(Boolean value) {
			addCriterion("BEST <>", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestGreaterThan(Boolean value) {
			addCriterion("BEST >", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestGreaterThanOrEqualTo(Boolean value) {
			addCriterion("BEST >=", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestLessThan(Boolean value) {
			addCriterion("BEST <", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestLessThanOrEqualTo(Boolean value) {
			addCriterion("BEST <=", value, "best");
			return (Criteria) this;
		}

		public Criteria andBestIn(List<Boolean> values) {
			addCriterion("BEST in", values, "best");
			return (Criteria) this;
		}

		public Criteria andBestNotIn(List<Boolean> values) {
			addCriterion("BEST not in", values, "best");
			return (Criteria) this;
		}

		public Criteria andBestBetween(Boolean value1, Boolean value2) {
			addCriterion("BEST between", value1, value2, "best");
			return (Criteria) this;
		}

		public Criteria andBestNotBetween(Boolean value1, Boolean value2) {
			addCriterion("BEST not between", value1, value2, "best");
			return (Criteria) this;
		}

		public Criteria andEndIsNull() {
			addCriterion("`END` is null");
			return (Criteria) this;
		}

		public Criteria andEndIsNotNull() {
			addCriterion("`END` is not null");
			return (Criteria) this;
		}

		public Criteria andEndEqualTo(Boolean value) {
			addCriterion("`END` =", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndNotEqualTo(Boolean value) {
			addCriterion("`END` <>", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndGreaterThan(Boolean value) {
			addCriterion("`END` >", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndGreaterThanOrEqualTo(Boolean value) {
			addCriterion("`END` >=", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndLessThan(Boolean value) {
			addCriterion("`END` <", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndLessThanOrEqualTo(Boolean value) {
			addCriterion("`END` <=", value, "end");
			return (Criteria) this;
		}

		public Criteria andEndIn(List<Boolean> values) {
			addCriterion("`END` in", values, "end");
			return (Criteria) this;
		}

		public Criteria andEndNotIn(List<Boolean> values) {
			addCriterion("`END` not in", values, "end");
			return (Criteria) this;
		}

		public Criteria andEndBetween(Boolean value1, Boolean value2) {
			addCriterion("`END` between", value1, value2, "end");
			return (Criteria) this;
		}

		public Criteria andEndNotBetween(Boolean value1, Boolean value2) {
			addCriterion("`END` not between", value1, value2, "end");
			return (Criteria) this;
		}

		public Criteria andLockIsNull() {
			addCriterion("`LOCK` is null");
			return (Criteria) this;
		}

		public Criteria andLockIsNotNull() {
			addCriterion("`LOCK` is not null");
			return (Criteria) this;
		}

		public Criteria andLockEqualTo(Boolean value) {
			addCriterion("`LOCK` =", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockNotEqualTo(Boolean value) {
			addCriterion("`LOCK` <>", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockGreaterThan(Boolean value) {
			addCriterion("`LOCK` >", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockGreaterThanOrEqualTo(Boolean value) {
			addCriterion("`LOCK` >=", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockLessThan(Boolean value) {
			addCriterion("`LOCK` <", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockLessThanOrEqualTo(Boolean value) {
			addCriterion("`LOCK` <=", value, "lock");
			return (Criteria) this;
		}

		public Criteria andLockIn(List<Boolean> values) {
			addCriterion("`LOCK` in", values, "lock");
			return (Criteria) this;
		}

		public Criteria andLockNotIn(List<Boolean> values) {
			addCriterion("`LOCK` not in", values, "lock");
			return (Criteria) this;
		}

		public Criteria andLockBetween(Boolean value1, Boolean value2) {
			addCriterion("`LOCK` between", value1, value2, "lock");
			return (Criteria) this;
		}

		public Criteria andLockNotBetween(Boolean value1, Boolean value2) {
			addCriterion("`LOCK` not between", value1, value2, "lock");
			return (Criteria) this;
		}

		public Criteria andMarkIsNull() {
			addCriterion("MARK is null");
			return (Criteria) this;
		}

		public Criteria andMarkIsNotNull() {
			addCriterion("MARK is not null");
			return (Criteria) this;
		}

		public Criteria andMarkEqualTo(Integer value) {
			addCriterion("MARK =", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkNotEqualTo(Integer value) {
			addCriterion("MARK <>", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkGreaterThan(Integer value) {
			addCriterion("MARK >", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkGreaterThanOrEqualTo(Integer value) {
			addCriterion("MARK >=", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkLessThan(Integer value) {
			addCriterion("MARK <", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkLessThanOrEqualTo(Integer value) {
			addCriterion("MARK <=", value, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkIn(List<Integer> values) {
			addCriterion("MARK in", values, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkNotIn(List<Integer> values) {
			addCriterion("MARK not in", values, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkBetween(Integer value1, Integer value2) {
			addCriterion("MARK between", value1, value2, "mark");
			return (Criteria) this;
		}

		public Criteria andMarkNotBetween(Integer value1, Integer value2) {
			addCriterion("MARK not between", value1, value2, "mark");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("DELETED is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("DELETED is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Boolean value) {
			addCriterion("DELETED =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Boolean value) {
			addCriterion("DELETED <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Boolean value) {
			addCriterion("DELETED >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("DELETED >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Boolean value) {
			addCriterion("DELETED <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
			addCriterion("DELETED <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Boolean> values) {
			addCriterion("DELETED in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Boolean> values) {
			addCriterion("DELETED not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
			addCriterion("DELETED between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("DELETED not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andTopTypeIsNull() {
			addCriterion("TOP_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andTopTypeIsNotNull() {
			addCriterion("TOP_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andTopTypeEqualTo(Short value) {
			addCriterion("TOP_TYPE =", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeNotEqualTo(Short value) {
			addCriterion("TOP_TYPE <>", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeGreaterThan(Short value) {
			addCriterion("TOP_TYPE >", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("TOP_TYPE >=", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeLessThan(Short value) {
			addCriterion("TOP_TYPE <", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeLessThanOrEqualTo(Short value) {
			addCriterion("TOP_TYPE <=", value, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeIn(List<Short> values) {
			addCriterion("TOP_TYPE in", values, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeNotIn(List<Short> values) {
			addCriterion("TOP_TYPE not in", values, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeBetween(Short value1, Short value2) {
			addCriterion("TOP_TYPE between", value1, value2, "topType");
			return (Criteria) this;
		}

		public Criteria andTopTypeNotBetween(Short value1, Short value2) {
			addCriterion("TOP_TYPE not between", value1, value2, "topType");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("CREATE_TIME =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("CREATE_TIME <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("CREATE_TIME >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("CREATE_TIME <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("CREATE_TIME in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("CREATE_TIME not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME not between", value1, value2,
					"createTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIsNull() {
			addCriterion("REPLY_TIME is null");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIsNotNull() {
			addCriterion("REPLY_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andReplyTimeEqualTo(Date value) {
			addCriterion("REPLY_TIME =", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotEqualTo(Date value) {
			addCriterion("REPLY_TIME <>", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeGreaterThan(Date value) {
			addCriterion("REPLY_TIME >", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("REPLY_TIME >=", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeLessThan(Date value) {
			addCriterion("REPLY_TIME <", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeLessThanOrEqualTo(Date value) {
			addCriterion("REPLY_TIME <=", value, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeIn(List<Date> values) {
			addCriterion("REPLY_TIME in", values, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotIn(List<Date> values) {
			addCriterion("REPLY_TIME not in", values, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeBetween(Date value1, Date value2) {
			addCriterion("REPLY_TIME between", value1, value2, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyTimeNotBetween(Date value1, Date value2) {
			addCriterion("REPLY_TIME not between", value1, value2, "replyTime");
			return (Criteria) this;
		}

		public Criteria andReplyCountIsNull() {
			addCriterion("REPLY_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andReplyCountIsNotNull() {
			addCriterion("REPLY_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andReplyCountEqualTo(Integer value) {
			addCriterion("REPLY_COUNT =", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountNotEqualTo(Integer value) {
			addCriterion("REPLY_COUNT <>", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountGreaterThan(Integer value) {
			addCriterion("REPLY_COUNT >", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("REPLY_COUNT >=", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountLessThan(Integer value) {
			addCriterion("REPLY_COUNT <", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountLessThanOrEqualTo(Integer value) {
			addCriterion("REPLY_COUNT <=", value, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountIn(List<Integer> values) {
			addCriterion("REPLY_COUNT in", values, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountNotIn(List<Integer> values) {
			addCriterion("REPLY_COUNT not in", values, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_COUNT between", value1, value2, "replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyCountNotBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_COUNT not between", value1, value2,
					"replyCount");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopIsNull() {
			addCriterion("REPLY_HAS_TOP is null");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopIsNotNull() {
			addCriterion("REPLY_HAS_TOP is not null");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopEqualTo(Integer value) {
			addCriterion("REPLY_HAS_TOP =", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopNotEqualTo(Integer value) {
			addCriterion("REPLY_HAS_TOP <>", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopGreaterThan(Integer value) {
			addCriterion("REPLY_HAS_TOP >", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopGreaterThanOrEqualTo(Integer value) {
			addCriterion("REPLY_HAS_TOP >=", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopLessThan(Integer value) {
			addCriterion("REPLY_HAS_TOP <", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopLessThanOrEqualTo(Integer value) {
			addCriterion("REPLY_HAS_TOP <=", value, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopIn(List<Integer> values) {
			addCriterion("REPLY_HAS_TOP in", values, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopNotIn(List<Integer> values) {
			addCriterion("REPLY_HAS_TOP not in", values, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_HAS_TOP between", value1, value2, "replyHasTop");
			return (Criteria) this;
		}

		public Criteria andReplyHasTopNotBetween(Integer value1, Integer value2) {
			addCriterion("REPLY_HAS_TOP not between", value1, value2,
					"replyHasTop");
			return (Criteria) this;
		}

		public Criteria andFavCountIsNull() {
			addCriterion("FAV_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andFavCountIsNotNull() {
			addCriterion("FAV_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andFavCountEqualTo(Integer value) {
			addCriterion("FAV_COUNT =", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountNotEqualTo(Integer value) {
			addCriterion("FAV_COUNT <>", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountGreaterThan(Integer value) {
			addCriterion("FAV_COUNT >", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("FAV_COUNT >=", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountLessThan(Integer value) {
			addCriterion("FAV_COUNT <", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountLessThanOrEqualTo(Integer value) {
			addCriterion("FAV_COUNT <=", value, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountIn(List<Integer> values) {
			addCriterion("FAV_COUNT in", values, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountNotIn(List<Integer> values) {
			addCriterion("FAV_COUNT not in", values, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountBetween(Integer value1, Integer value2) {
			addCriterion("FAV_COUNT between", value1, value2, "favCount");
			return (Criteria) this;
		}

		public Criteria andFavCountNotBetween(Integer value1, Integer value2) {
			addCriterion("FAV_COUNT not between", value1, value2, "favCount");
			return (Criteria) this;
		}

		public Criteria andAuthorNameIsNull() {
			addCriterion("AUTHOR_NAME is null");
			return (Criteria) this;
		}

		public Criteria andAuthorNameIsNotNull() {
			addCriterion("AUTHOR_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andAuthorNameEqualTo(String value) {
			addCriterion("AUTHOR_NAME =", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameNotEqualTo(String value) {
			addCriterion("AUTHOR_NAME <>", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameGreaterThan(String value) {
			addCriterion("AUTHOR_NAME >", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameGreaterThanOrEqualTo(String value) {
			addCriterion("AUTHOR_NAME >=", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameLessThan(String value) {
			addCriterion("AUTHOR_NAME <", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameLessThanOrEqualTo(String value) {
			addCriterion("AUTHOR_NAME <=", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameLike(String value) {
			addCriterion("AUTHOR_NAME like", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameNotLike(String value) {
			addCriterion("AUTHOR_NAME not like", value, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameIn(List<String> values) {
			addCriterion("AUTHOR_NAME in", values, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameNotIn(List<String> values) {
			addCriterion("AUTHOR_NAME not in", values, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameBetween(String value1, String value2) {
			addCriterion("AUTHOR_NAME between", value1, value2, "authorName");
			return (Criteria) this;
		}

		public Criteria andAuthorNameNotBetween(String value1, String value2) {
			addCriterion("AUTHOR_NAME not between", value1, value2,
					"authorName");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentIsNull() {
			addCriterion("HAS_ATTACHMENT is null");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentIsNotNull() {
			addCriterion("HAS_ATTACHMENT is not null");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentEqualTo(Boolean value) {
			addCriterion("HAS_ATTACHMENT =", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentNotEqualTo(Boolean value) {
			addCriterion("HAS_ATTACHMENT <>", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentGreaterThan(Boolean value) {
			addCriterion("HAS_ATTACHMENT >", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentGreaterThanOrEqualTo(Boolean value) {
			addCriterion("HAS_ATTACHMENT >=", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentLessThan(Boolean value) {
			addCriterion("HAS_ATTACHMENT <", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentLessThanOrEqualTo(Boolean value) {
			addCriterion("HAS_ATTACHMENT <=", value, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentIn(List<Boolean> values) {
			addCriterion("HAS_ATTACHMENT in", values, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentNotIn(List<Boolean> values) {
			addCriterion("HAS_ATTACHMENT not in", values, "hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentBetween(Boolean value1, Boolean value2) {
			addCriterion("HAS_ATTACHMENT between", value1, value2,
					"hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasAttachmentNotBetween(Boolean value1,
				Boolean value2) {
			addCriterion("HAS_ATTACHMENT not between", value1, value2,
					"hasAttachment");
			return (Criteria) this;
		}

		public Criteria andHasVoteIsNull() {
			addCriterion("HAS_VOTE is null");
			return (Criteria) this;
		}

		public Criteria andHasVoteIsNotNull() {
			addCriterion("HAS_VOTE is not null");
			return (Criteria) this;
		}

		public Criteria andHasVoteEqualTo(Boolean value) {
			addCriterion("HAS_VOTE =", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteNotEqualTo(Boolean value) {
			addCriterion("HAS_VOTE <>", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteGreaterThan(Boolean value) {
			addCriterion("HAS_VOTE >", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteGreaterThanOrEqualTo(Boolean value) {
			addCriterion("HAS_VOTE >=", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteLessThan(Boolean value) {
			addCriterion("HAS_VOTE <", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteLessThanOrEqualTo(Boolean value) {
			addCriterion("HAS_VOTE <=", value, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteIn(List<Boolean> values) {
			addCriterion("HAS_VOTE in", values, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteNotIn(List<Boolean> values) {
			addCriterion("HAS_VOTE not in", values, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteBetween(Boolean value1, Boolean value2) {
			addCriterion("HAS_VOTE between", value1, value2, "hasVote");
			return (Criteria) this;
		}

		public Criteria andHasVoteNotBetween(Boolean value1, Boolean value2) {
			addCriterion("HAS_VOTE not between", value1, value2, "hasVote");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table post
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}